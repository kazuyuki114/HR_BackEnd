# Generated by Django 5.2.4 on 2025-07-16 13:41

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('department_id', models.AutoField(primary_key=True, serialize=False)),
                ('department_name', models.CharField(max_length=100)),
                ('department_code', models.CharField(max_length=10, unique=True)),
                ('budget', models.FloatField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=100, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'departments',
            },
        ),
        migrations.CreateModel(
            name='TrainingProgram',
            fields=[
                ('program_id', models.AutoField(primary_key=True, serialize=False)),
                ('program_name', models.CharField(max_length=100)),
                ('program_code', models.CharField(max_length=20, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('duration_hours', models.IntegerField(blank=True, null=True)),
                ('trainer_name', models.CharField(blank=True, max_length=100, null=True)),
                ('cost', models.FloatField(blank=True, null=True)),
                ('max_participants', models.IntegerField(blank=True, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'training_programs',
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('employee_id', models.AutoField(primary_key=True, serialize=False)),
                ('employee_code', models.CharField(max_length=20, unique=True)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('MALE', 'Male'), ('FEMALE', 'Female'), ('OTHER', 'Other')], max_length=6, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('hire_date', models.DateField()),
                ('employment_status', models.CharField(blank=True, choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive'), ('ON_LEAVE', 'On Leave'), ('TERMINATED', 'Terminated')], max_length=10, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
                ('updated_date', models.DateTimeField(blank=True, null=True)),
                ('department', models.ForeignKey(blank=True, db_column='department_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employees', to='api.department')),
                ('manager', models.ForeignKey(blank=True, db_column='manager_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subordinates', to='api.employee')),
            ],
            options={
                'db_table': 'employees',
            },
        ),
        migrations.AddField(
            model_name='department',
            name='manager',
            field=models.ForeignKey(blank=True, db_column='manager_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='managed_departments', to='api.employee'),
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('attendance_id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('check_in_time', models.DateTimeField(blank=True, null=True)),
                ('check_out_time', models.DateTimeField(blank=True, null=True)),
                ('total_hours', models.FloatField(blank=True, null=True)),
                ('status', models.CharField(blank=True, choices=[('PRESENT', 'Present'), ('ABSENT', 'Absent'), ('HALF_DAY', 'Half Day'), ('LATE', 'Late')], max_length=8, null=True)),
                ('remarks', models.CharField(blank=True, max_length=200, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
                ('employee', models.ForeignKey(db_column='employee_id', on_delete=django.db.models.deletion.CASCADE, related_name='attendance_records', to='api.employee')),
            ],
            options={
                'db_table': 'attendance',
            },
        ),
        migrations.CreateModel(
            name='EmployeeBenefit',
            fields=[
                ('benefit_id', models.AutoField(primary_key=True, serialize=False)),
                ('benefit_type', models.CharField(max_length=50)),
                ('benefit_name', models.CharField(max_length=100)),
                ('provider', models.CharField(blank=True, max_length=100, null=True)),
                ('coverage_amount', models.FloatField(blank=True, null=True)),
                ('employee_contribution', models.FloatField(blank=True, null=True)),
                ('company_contribution', models.FloatField(blank=True, null=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('is_active', models.BooleanField(blank=True, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
                ('employee', models.ForeignKey(db_column='employee_id', on_delete=django.db.models.deletion.CASCADE, related_name='benefits', to='api.employee')),
            ],
            options={
                'db_table': 'employee_benefits',
            },
        ),
        migrations.CreateModel(
            name='LeaveRequest',
            fields=[
                ('leave_id', models.AutoField(primary_key=True, serialize=False)),
                ('leave_type', models.CharField(choices=[('ANNUAL', 'Annual Leave'), ('SICK', 'Sick Leave'), ('MATERNITY', 'Maternity Leave'), ('PATERNITY', 'Paternity Leave'), ('UNPAID', 'Unpaid Leave'), ('EMERGENCY', 'Emergency Leave')], max_length=9)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('days_requested', models.IntegerField()),
                ('reason', models.TextField(blank=True, null=True)),
                ('status', models.CharField(blank=True, choices=[('Pending', 'Pending'), ('Approved', 'Approved'), ('Rejected', 'Rejected'), ('Cancelled', 'Cancelled')], max_length=20, null=True)),
                ('approved_date', models.DateTimeField(blank=True, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
                ('approved_by', models.ForeignKey(blank=True, db_column='approved_by', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_leaves', to='api.employee')),
                ('employee', models.ForeignKey(db_column='employee_id', on_delete=django.db.models.deletion.CASCADE, related_name='leave_requests', to='api.employee')),
            ],
            options={
                'db_table': 'leave_requests',
            },
        ),
        migrations.CreateModel(
            name='Payroll',
            fields=[
                ('payroll_id', models.AutoField(primary_key=True, serialize=False)),
                ('pay_period_start', models.DateField()),
                ('pay_period_end', models.DateField()),
                ('basic_salary', models.FloatField()),
                ('overtime_hours', models.FloatField(blank=True, null=True)),
                ('overtime_rate', models.FloatField(blank=True, null=True)),
                ('allowances', models.FloatField(blank=True, null=True)),
                ('deductions', models.FloatField(blank=True, null=True)),
                ('tax_deduction', models.FloatField(blank=True, null=True)),
                ('net_salary', models.FloatField()),
                ('pay_date', models.DateField(blank=True, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
                ('employee', models.ForeignKey(db_column='employee_id', on_delete=django.db.models.deletion.CASCADE, related_name='payroll_records', to='api.employee')),
            ],
            options={
                'db_table': 'payroll',
            },
        ),
        migrations.CreateModel(
            name='PerformanceReview',
            fields=[
                ('review_id', models.AutoField(primary_key=True, serialize=False)),
                ('review_period_start', models.DateField()),
                ('review_period_end', models.DateField()),
                ('goals_score', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('competency_score', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('overall_score', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('strengths', models.TextField(blank=True, null=True)),
                ('areas_for_improvement', models.TextField(blank=True, null=True)),
                ('development_plan', models.TextField(blank=True, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('review_date', models.DateField()),
                ('created_date', models.DateTimeField(blank=True, null=True)),
                ('employee', models.ForeignKey(db_column='employee_id', on_delete=django.db.models.deletion.CASCADE, related_name='performance_reviews', to='api.employee')),
                ('reviewer', models.ForeignKey(db_column='reviewer_id', on_delete=django.db.models.deletion.CASCADE, related_name='conducted_reviews', to='api.employee')),
            ],
            options={
                'db_table': 'performance_reviews',
            },
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('position_id', models.AutoField(primary_key=True, serialize=False)),
                ('position_title', models.CharField(max_length=100)),
                ('position_code', models.CharField(max_length=20, unique=True)),
                ('job_description', models.TextField(blank=True, null=True)),
                ('min_salary', models.FloatField(blank=True, null=True)),
                ('max_salary', models.FloatField(blank=True, null=True)),
                ('required_experience', models.IntegerField(blank=True, help_text='Required experience in years', null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
                ('department', models.ForeignKey(blank=True, db_column='department_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='positions', to='api.department')),
            ],
            options={
                'db_table': 'positions',
            },
        ),
        migrations.AddField(
            model_name='employee',
            name='position',
            field=models.ForeignKey(blank=True, db_column='position_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employees', to='api.position'),
        ),
        migrations.CreateModel(
            name='TrainingRecord',
            fields=[
                ('record_id', models.AutoField(primary_key=True, serialize=False)),
                ('enrollment_date', models.DateField()),
                ('start_date', models.DateField(blank=True, null=True)),
                ('completion_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(blank=True, choices=[('Enrolled', 'Enrolled'), ('In Progress', 'In Progress'), ('Completed', 'Completed'), ('Dropped', 'Dropped'), ('Failed', 'Failed')], max_length=20, null=True)),
                ('score', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('certification_earned', models.BooleanField(blank=True, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
                ('employee', models.ForeignKey(db_column='employee_id', on_delete=django.db.models.deletion.CASCADE, related_name='training_records', to='api.employee')),
                ('program', models.ForeignKey(db_column='program_id', on_delete=django.db.models.deletion.CASCADE, related_name='training_records', to='api.trainingprogram')),
            ],
            options={
                'db_table': 'training_records',
            },
        ),
    ]
